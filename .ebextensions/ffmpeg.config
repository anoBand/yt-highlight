# .ebextensions/ffmpeg.config
# This script installs a static, self-contained build of ffmpeg.
# It places the binaries in /usr/local/bin and ensures they are executable by all users.

commands:
  01_download_ffmpeg:
    # Download a trusted, static build of ffmpeg.
    # The test checks the final location to ensure idempotency.
    command: "curl -o /tmp/ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz"
    test: "! test -f /usr/local/bin/ffmpeg"

  02_extract_ffmpeg:
    # Extract the downloaded archive into the /tmp directory.
    command: "tar -xf /tmp/ffmpeg.tar.xz -C /tmp"
    test: "! test -f /usr/local/bin/ffmpeg"

  03_install_binaries:
    # Move the ffmpeg and ffprobe executables to /usr/local/bin, the standard path for user-installed software.
    # The wildcard '*' makes this robust against future version changes in the download.
    command: "sudo mv /tmp/ffmpeg-*-amd64-static/ffmpeg /tmp/ffmpeg-*-amd64-static/ffprobe /usr/local/bin/"
    test: "! test -f /usr/local/bin/ffmpeg"

  04_set_permissions:
    # CRITICAL STEP: Ensure the binaries are executable by all users, including the 'webapp' user that runs the application.
    command: "sudo chmod +x /usr/local/bin/ffmpeg /usr/local/bin/ffprobe"
    test: "! test -x /usr/local/bin/ffprobe"

  05_create_downloads_dir:
    # Create a directory for the application to store its output files.
    # This ensures the directory exists and has the correct permissions.
    command: "mkdir -p /var/app/current/downloads && chown webapp:webapp /var/app/current/downloads"
    # The test checks if the directory exists.
    test: "! test -d /var/app/current/downloads"